"""Initial migration or Add status enums

Revision ID: 5bcdad4da0f7
Revises: 
Create Date: 2025-06-26 00:10:58.820715

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql


# revision identifiers, used by Alembic.
revision: str = '5bcdad4da0f7' # Keep your actual revision ID here
down_revision: Union[str, Sequence[str], None] = None # Keep your actual previous revision ID here (or None if first)
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###

    # Define the ENUM types from postgresql dialect for use in alter_column
    # We use create_type=True and checkfirst=True to ensure they are created if they don't exist
    order_status_enum = postgresql.ENUM('PENDING', 'QUEUED', 'IN_PROGRESS', 'COMPLETED', 'CANCELLED', name='order_status_enum', create_type=True)
    order_status_enum.create(op.get_bind(), checkfirst=True) 

    joblog_status_enum = postgresql.ENUM('PENDING', 'SCHEDULED', 'IN_PROGRESS', 'PAUSED', 'COMPLETED', 'FAILED', 'ABORTED', name='joblog_status_enum', create_type=True)
    joblog_status_enum.create(op.get_bind(), checkfirst=True) 

    # Alter 'job_logs.status' column to use the new ENUM type
    op.alter_column('job_logs', 'status',
                    existing_type=sa.VARCHAR(), # Assuming it was VARCHAR before, common default
                    type_=joblog_status_enum, # Use the joblog_status_enum
                    nullable=False, # Should match your models.py definition
                    postgresql_using="status::text::joblog_status_enum") # CORRECTED: Use 'status' column and 'joblog_status_enum'

    # Alter 'production_orders.current_status' column to use the new ENUM type
    op.alter_column('production_orders', 'current_status',
                    existing_type=sa.VARCHAR(), # Assuming it was VARCHAR before
                    type_=order_status_enum, # Use the order_status_enum
                    existing_nullable=False, # Should match your models.py definition
                    postgresql_using="current_status::text::order_status_enum") # CORRECTED: Use 'current_status' column and 'order_status_enum'
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###

    # Re-define the ENUM types for use in downgrade, but without creating them
    order_status_enum = postgresql.ENUM('PENDING', 'QUEUED', 'IN_PROGRESS', 'COMPLETED', 'CANCELLED', name='order_status_enum', create_type=False)
    joblog_status_enum = postgresql.ENUM('PENDING', 'SCHEDULED', 'IN_PROGRESS', 'PAUSED', 'COMPLETED', 'FAILED', 'ABORTED', name='joblog_status_enum', create_type=False)


    # Alter 'production_orders.current_status' column back to VARCHAR
    op.alter_column('production_orders', 'current_status',
                    existing_type=order_status_enum, # Reference the enum type
                    type_=sa.VARCHAR(), # Revert to VARCHAR
                    existing_nullable=False, # Should match original nullability
                    postgresql_using="current_status::text") # CORRECTED: Use 'current_status' column

    # Alter 'job_logs.status' column back to VARCHAR
    op.alter_column('job_logs', 'status',
                    existing_type=joblog_status_enum, # Reference the enum type
                    type_=sa.VARCHAR(), # Revert to VARCHAR
                    nullable=False, # Should match your models.py definition (assuming it's False)
                    postgresql_using="status::text") # CORRECTED: Use 'status' column

    # Drop the ENUM types after columns are reverted to VARCHAR
    # Note: Drop is called on a newly instantiated ENUM object that references the DB type name
    postgresql.ENUM('PENDING', 'QUEUED', 'IN_PROGRESS', 'COMPLETED', 'CANCELLED', name='order_status_enum').drop(op.get_bind(), checkfirst=True)
    postgresql.ENUM('PENDING', 'SCHEDULED', 'IN_PROGRESS', 'PAUSED', 'COMPLETED', 'FAILED', 'ABORTED', name='joblog_status_enum').drop(op.get_bind(), checkfirst=True)
    # ### end Alembic commands ###

